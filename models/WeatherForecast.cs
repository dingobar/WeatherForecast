using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace eleventh
{
    //Generated by https://Json2Csharp.net

    public class WeatherForecast
    {

        public class WindSpeed
        {

            public string name { get; set; }
            public string id { get; set; }
            public string beaufort { get; set; }
            public string mps { get; set; }

        }

        public class WindDirection
        {

            public string deg { get; set; }
            public string id { get; set; }
            public string name { get; set; }

        }

        public class HighClouds
        {

            public string percent { get; set; }
            public string id { get; set; }

        }

        public class Cloudiness
        {

            public string percent { get; set; }
            public string id { get; set; }

        }

        public class WindGust
        {

            public string mps { get; set; }
            public string id { get; set; }

        }

        public class Temperature
        {

            public string unit { get; set; }
            public string value { get; set; }
            public string id { get; set; }

        }

        public class DewpointTemperature
        {

            public string id { get; set; }
            public string unit { get; set; }
            public string value { get; set; }

        }

        public class MediumClouds
        {

            public string percent { get; set; }
            public string id { get; set; }

        }

        public class Fog
        {

            public string id { get; set; }
            public string percent { get; set; }

        }

        public class LowClouds
        {

            public string id { get; set; }
            public string percent { get; set; }

        }

        public class Pressure
        {

            public string unit { get; set; }
            public string value { get; set; }
            public string id { get; set; }

        }

        public class Humidity
        {

            public string unit { get; set; }
            public string value { get; set; }

        }

        public class Symbol
        {

            public string number { get; set; }
            public string id { get; set; }

        }

        public class Precipitation
        {

            public string minvalue { get; set; }
            public string maxvalue { get; set; }
            public string unit { get; set; }
            public string value { get; set; }

        }

        public class WindProbability
        {

            public string value { get; set; }
            public string unit { get; set; }

        }

        public class TemperatureProbability
        {

            public string value { get; set; }
            public string unit { get; set; }

        }

        public class MaxTemperature
        {

            public string value { get; set; }
            public string unit { get; set; }
            public string id { get; set; }

        }

        public class MinTemperature
        {

            public string id { get; set; }
            public string value { get; set; }
            public string unit { get; set; }

        }

        public class SymbolProbability
        {

            public string unit { get; set; }
            public string value { get; set; }

        }

        public class Location
        {

            public WindSpeed windSpeed { get; set; }
            public string altitude { get; set; }
            public WindDirection windDirection { get; set; }
            public string latitude { get; set; }
            public HighClouds highClouds { get; set; }
            public Cloudiness cloudiness { get; set; }
            public WindGust windGust { get; set; }
            public Temperature temperature { get; set; }
            public DewpointTemperature dewpointTemperature { get; set; }
            public string longitude { get; set; }
            public MediumClouds mediumClouds { get; set; }
            public Fog fog { get; set; }
            public LowClouds lowClouds { get; set; }
            public Pressure pressure { get; set; }
            public Humidity humidity { get; set; }
            public Symbol symbol { get; set; }
            public Precipitation precipitation { get; set; }
            public WindProbability windProbability { get; set; }
            public TemperatureProbability temperatureProbability { get; set; }
            public MaxTemperature maxTemperature { get; set; }
            public MinTemperature minTemperature { get; set; }
            public SymbolProbability symbolProbability { get; set; }

        }

        public class Time
        {

            public DateTime from { get; set; }
            public string datatype { get; set; }
            public Location location { get; set; }
            public DateTime to { get; set; }


        }

        public class Product
        {

            public IList<TimeCalculations> time { get; set; }
            [JsonPropertyName("class")]
            public string classname { get; set; }

        }

        public class Model
        {

            public DateTime from { get; set; }
            public DateTime to { get; set; }
            public DateTime runended { get; set; }
            public DateTime termin { get; set; }
            public DateTime nextrun { get; set; }
            public string name { get; set; }

        }

        public class Meta
        {

            public Model model { get; set; }

        }

        public Product product { get; set; }
        public Meta meta { get; set; }
        public DateTime created { get; set; }

    }

    public class TimeCalculations : WeatherForecast.Time
    {
        public int ForecastLength
        {
            get
            {
                return (int)Math.Round((this.to - this.from).TotalHours);
            }
        }

        public TimeSpan TimeUntil
        {
            get { return this.from - DateTime.UtcNow; }
        }

        public string ForecastType
        {
            get
            {
                switch (this.location.precipitation)
                {
                    case null:
                        return "general";
                    default:
                        return "precipitation";
                }
            }
        }
    }
}

